


pipeline {
    environment {
        imagename = "abdulzamad/cookbook"
        registryCredential = 'docker-regestry'
        dockerImage = ''
    }
    agent any
    stages {
        stage('Setup') {
                steps {
                        sh "echo Setting up env"
                        cleanWs()
                        git branch: 'main', credentialsId: 'github-token', url: 'https://github.com/Abdulzamad/flaskwebapp'
                }
            }
        stage('Test') {
                steps {
                    script {
                        try{
                            sh "echo 'Setting up Tests'"
                            sh "python3 -m venv .py"
                        }catch (err){
                            skipRemainingStages = true
                            sh "echo 'Test Env Setup Failure' && exit 1 "
                        }
                        try{
                            sh "echo 'Running Tests'"
                            sh "./.py/bin/python -m pip install -r requirements.txt && ./.py/bin/python -m db upgrade && ./.py/bin/python -m pytest -v "
                        }catch (err){
                            skipRemainingStages = true
                            sh "echo 'Test Running Failure' && exit 1 "
                        }
                    }
                        
                }
            
        }
        stage('Build') {
                
                steps {
                    script {
                        dockerImage = docker.build imagename
                    }
                    
                }
        }
        stage('Deploy') {
                
                steps {
                        script {
                            docker.withRegistry('', registryCredential) {     
                                dockerImage.push("$BUILD_NUMBER")
                                dockerImage.push('latest')

                            }
                        }
                        sshagent(credentials: ['docker-manager'], ignoreMissing: true) {
                            sh "scp -o StrictHostKeyChecking=no  ./docker-compose.yml azureuser@10.0.0.5:~/flaskweb-compose.yml"
                            sh "scp -o StrictHostKeyChecking=no  ./.env azureuser@10.0.0.5:~/.env"
                            sh "ssh -o StrictHostKeyChecking=no -l azureuser 10.0.0.5 'sudo docker stack deploy --compose-file ~/flaskweb-compose.yml vossibility'"
                            
                            
                        }
                        
                    
                }
                
            
        }
        stage('Remove Unused docker image - Master') {
            
            steps{
                sh "docker rmi $imagename:$BUILD_NUMBER"
                sh "docker rmi $imagename:latest"
            }
        }
        
    }
}